import{_ as a,c as i,o as n,aj as p}from"./chunks/framework.CcbH9oJh.js";const c=JSON.parse('{"title":"e820","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"e820 | Blog"}]]},"headers":[],"relativePath":"mm/e820.md","filePath":"mm/e820.md","lastUpdated":1761828946000}'),e={name:"mm/e820.md"};function l(h,s,k,t,r,E){return n(),i("div",null,s[0]||(s[0]=[p(`<h1 id="e820" tabindex="-1">e820 <a class="header-anchor" href="#e820" aria-label="Permalink to “e820”">​</a></h1><ul><li><a href="https://richardweiyang-2.gitbook.io/kernel-exploring/nei-cun-guan-li/00-memory_a_bottom_up_view/01-e820_retrieve_memory_from_hw" target="_blank" rel="noreferrer">e820 从硬件获取内存分布 | Kernel Exploring</a></li><li>🌟 <a href="http://www.biscuitos.cn/blog/MMU-E820/" target="_blank" rel="noreferrer">E820 内存管理器</a></li><li><a href="http://www.biscuitos.cn/blog/MMU-seaBIOS_E820/" target="_blank" rel="noreferrer">E820 on seaBIOS</a></li><li><a href="http://www.biscuitos.cn/blog/MMU-QEMU-KVM_E820/" target="_blank" rel="noreferrer">E820 on Qemu/KVM</a></li><li><a href="https://wiki.osdev.org/Detecting_Memory_(x86)" target="_blank" rel="noreferrer">Detecting Memory (x86) - OSDev Wiki</a></li><li>🌟《QEMU/KVM 源码解析与应用》 <ul><li>3.2 fw_cfg 设备介绍</li><li>3.4 SeaBIOS 分析</li></ul></li></ul><h2 id="qemu-fw-cfg" tabindex="-1">QEMU fw_cfg <a class="header-anchor" href="#qemu-fw-cfg" aria-label="Permalink to “QEMU fw_cfg”">​</a></h2><p><a href="/blog/bios/seabios#qemu-fw-cfg">sebios.md</a></p><p>QEMU/KVM 作为虚拟化核心组建，其可以用于模拟 X86 运行环境，因此其具备构建 X86 平台硬件信息的能力，QEMU/KVM 同样提供了创建 E820 的机制，用于为 seaBIOS 模拟 E820 相关的硬件信息，其中包括了 BIOS 的 CMOS 内存，hw_cfg 固件信息等。</p><h2 id="seabios" tabindex="-1">seabios <a class="header-anchor" href="#seabios" aria-label="Permalink to “seabios”">​</a></h2><p><a href="/blog/bios/seabios">sebios.md</a></p><p>BIOS POST (Power On Self Test) 上点自检之后，会从 CMOS 中获得内存相关的信息，这些信息用于构建 BIOS 的 BDA/EBDA 信息，以便 BIOS 构建自己的 E820 表，BIOS 构建的 E820 表构建完毕之后会将 E820 表里的内存区域与 BIOS IVT 的 0x15/E820 中断例程进行绑定，当内核初始化时通过与 BIOS IVT 进行交互，BIOS 将 E820 表传递给了内核。BIOS 在初始化过程中也会预留一些内存区域，这些内存区域也会一同传递给内核。</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reset_vector-&gt;entry_post-&gt;dopost-&gt;maininit-&gt;interface_init</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  qemu_cfg_init</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    qemu_cfg_e820</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      /* 通过 qemu 的 fw_cfg 接口，获取 e820 table  */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      qemu_cfg_read_entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      e820_add</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>seabios 在 IVT 里提供了很多中断入口。</p><p>在 X86 架构 Linux 内核发展的过程中，物理内存支持的长度从 16MB 发展到 64MB、4GB 再到今天支持 64-bit 的地址总线，BIOS 在不同的历史阶段提供了不同的中断调用， 以满足内核从 BIOS 中获得内存区域相关的信息。 linux 发起 int 0x15 中断，通过 BIOS 中断例程探测物理内存</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handle_15</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handle_15e8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handle_15e820</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="进入-vmlinux-前-实模式" tabindex="-1">进入 vmlinux 前（实模式） <a class="header-anchor" href="#进入-vmlinux-前-实模式" aria-label="Permalink to “进入 vmlinux 前（实模式）”">​</a></h2><p>linux kernel 在实模式进行最早期的初始化，通过 BIOS 提供的 IVT 表分别从 0x15/0xE820、0x15/0xE801 以及 0x15/0x88 中获得物理内存信息，并将信息存储在 boot_params 数据结构里面。之后进入保护模式。</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* arch/x86/boot/main.c 被编译进 setup.elf 了</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   此时在实模式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">main</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  detect_memory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    detect_memory_e820</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      /* 通过 BIOS INT 0x15/E820 调用获得系统内存布局信息 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ireg.ax  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">e820</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      intcall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ireg, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">oreg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      boot_params.e820_entries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    detect_memory_e801</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    detect_memory_88</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>有两个地方定义了 boot_params 变量，分别是 setup.bin 和 vmlinux.bin 里（这两个会并成 bzImage）。 是 setup.bin 里的 boot_params 先初始化，然后会把 boot_params 传给 vmlinux：</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* setup.bin 里 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">go_to_protected_mode</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 把 arch/x86/boot/main.c 里的 boot_params 的地址传过去了（第二个参数） */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  protected_mode_jump</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 然后进入保护模式跳转到 setup.bin 的 startup_64 !</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    https://docs.hust.openatom.club/linux-insides-zh/booting/linux-bootstrap-4 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">startup_64</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 把 arch/x86/boot/main.c 里的 boot_params 的地址传到了这个函数 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  __startup_64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  common_startup_64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    early_setup_idt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    initial_code 也即 x86_64_start_kernel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      copy_bootdata</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* 把 arch/x86/boot/main.c 里的 boot_params 拷贝到 arch/x86/kernel/setup.c</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           里的 boot_params */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /* 如果是 CONFIG_PVH，则是拷贝了 pvh_bootparams  */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        memcpy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">boot_params, real_mode_data, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(boot_params));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x86_64_start_reservations-&gt;start_kernel</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>如果不用 bzImage 启动（CONFIG_PVH），而是直接用 vmlinux 启动，那则是在 init_pvh_bootparams 里初始化的？</p><h2 id="进入-vmlinux-后-保护模式" tabindex="-1">进入 vmlinux 后（保护模式） <a class="header-anchor" href="#进入-vmlinux-后-保护模式" aria-label="Permalink to “进入 vmlinux 后（保护模式）”">​</a></h2><p>内核在初始化过程中，实时模式中从 BIOS 中获得并构建 E820 表，然后结合 CMDLINE 参数和 boot_paras 参数构建内核自身的 E820 表，并基于该表构建系统的 IORESOURCE 信息和固件信息，最后基于 E820 表中可用内存区域信息构建 BootMEM 或者 MEMBLOCK 内存分配器。</p><p>构建 e820_table、e820_table_kexec 和 e820_table_firmware 三个表，并将 e820_table 按一定的顺序进行排序。处理完表之后， 内核计算出 max_pfn/max_low_pfn/high_memory 三个变量的值，接着内核将 e820_table 的可用内存区域添加到 MEMBLOCK 分配器，MEMBLOCK 分配器以这些信息为基础构建内核 第一个内存分配器。内核接着将 e820_table 中的预留区域插入到 iomem_resource 进行 管理，并将 e820_table_firmware 加入系统固件层进行管理。</p><p>内核根据这些信息，为之后的 MEMBLOCK 内存管理器的初始化提供了基础。</p><p>注意，此时内核用的 boot_params 是 arch/x86/kernel/setup.c 里定义的，而非 arch/x86/boot/main.c 里定义的那个</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">start_kernel-&gt;setup_arch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  e820__memory_setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 根据 boot_params 记录的 e820 信息，构建 e820_table 并排序 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    e820__memory_setup_default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 再拷贝成两个新的表 e820_table_kexec 和 e820_table_firmware */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    memcpy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e820_table_kexec, e820_table, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e820_table_kexec));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    memcpy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e820_table_firmware, e820_table, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e820_table_firmware));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 此时打印的是原始 BIOS E820 信息 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    e820__print_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* boot_params.e820_table 只能容纳 128 个，多于的通过 boot_params.hdr.setup_data 传递，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     会更新 e820_table */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  parse_setup_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    e820__memory_setup_extended</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 解析用 early_param 定义过的参数，比如 mem= 和 memmap= 对 e820_table 做一些调整 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  parse_early_param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 将 e820_table 大于 mem=size 的区域移除 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    parse_memopt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      e820__range_remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mem_size, ULLONG_MAX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mem_size, E820_TYPE_RAM, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 添加或修改 e820_table 内存区域信息 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    parse_memmap_opt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 将 boot_params.hdr.setup_data 内存区域进行保留，这是因为我们后面可能还会用到这些 setup_data</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     比如 pci_device_add-&gt;pcibios_device_add */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  e820__reserve_setup_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 更新 mem= 调整过后的 e820_table */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  e820__finish_early_params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 由于 BIOS 复杂性或是 CMDLINE 中包含了 “memmap=exactmap” 或 “memmap=xxM$yyM”</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     导致内核本身占用的内存区域不是 E820_TYPE_RAM，就需要将内核本身占用的区域标记为 E820_TYPE_RAM */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  e820_add_kernel_range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* max_pfn 是最大物理页帧号，max_low_pfn 是 4GB 内最大的物理页帧号 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 基于 e820_table 的 E820_TYPE_RAM 类型的区域，构建 memblock 内存分配器 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  e820__memblock_setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> memblock_add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(entry-&gt;addr, entry-&gt;size);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 从 memblock 分配器中为 mptable 分配 4KB 物理内存，并在 e820_table_kexec 中做预留，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     相关 cmdline 有 alloc_mptable update_mptable */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  e820__memblock_alloc_reserved_mpc_new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 将 e820_table 中预留区域内存插入到 iomem_resource 资源树下，以便维护，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     还在 /sys/firmware/memmap 里加了些 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  e820__reserve_resources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* E820_TYPE_RESERVED_KERN 和 E820_TYPE_RAM 属于 System RAM，其他都是 IO 内存 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res-&gt;flags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> e820_type_to_iomem_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(entry);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* TODO IORESOURCE_BUSY 是指什么？是指这个资源已被占用，驱动不能使用这个资源？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       比如，要为 BAR 空间分配一段地址区域，那就不能申请 IORESOURCE_BUSY 的？*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> do_mark_busy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      res-&gt;flags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IORESOURCE_BUSY;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      insert_resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">iomem_resource, res);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /* 插入到 iomem_resource 管理 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    firmware_map_add_early</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /* /sys/firmware/memmap */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* kernel_init 线程 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kernel_init</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  free_initmem</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 清除 initdata 之前，重新为 e820_table 分配内存 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    e820__reallocate_tables</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> kmemdup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e820_table, size, GFP_KERNEL);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      e820_table </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><p>TODO e820_table_kexec 和 e820_table_firmware</p><h2 id="sys-firmware-memmap" tabindex="-1">/sys/firmware/memmap <a class="header-anchor" href="#sys-firmware-memmap" aria-label="Permalink to “/sys/firmware/memmap”">​</a></h2><p>drivers/firmware/memmap.c</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ls /sys/firmware/memmap/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # cat /sys/firmware/memmap/0/start</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0x0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # cat /sys/firmware/memmap/0/end</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0x9fbff</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # cat /sys/firmware/memmap/0/type</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">System</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RAM</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="struct-biosregs" tabindex="-1"><code>struct biosregs</code> <a class="header-anchor" href="#struct-biosregs" aria-label="Permalink to “struct biosregs”">​</a></h2><p>struct biosregs 数据结构用于维护一套寄存器组，以便用于 BIOS 调用时候交换寄存器。 struct biosregs 数据结构内部使用一个 union 联合体包含了三套寄存器。分别对应保护模式、实模式、兼容 8086 模式。</p><h2 id="cmdline-mem-memmap" tabindex="-1">cmdline <code>mem=</code> <code>memmap=</code> <a class="header-anchor" href="#cmdline-mem-memmap" aria-label="Permalink to “cmdline mem= memmap=”">​</a></h2><p>在初始化接下来的内存分配器之前，内核可以提供一些手段来修改 E820 Table 表来控制未来系统的内 存布局，这种修改比较常见的就是给系统 CMDLINE 机制提供选项，实现某段区域的预留，或者控制系统可用物理内存的长度等功能。</p><p>E820 内存管理器提供了 <code>memmap=</code> 和 <code>mem=</code> 选项，用于用户添加或修改 E820 内存区域。通过这些选项，用户可以简单的添加一块 “系统预留区域”、 “ACPI Data 区域”、”系统保护区域”，或者可以修改 e820_table 中某段内存区域的类型。 这些 cmdline 选项还可以修改系统最大可用物理内存或者系统可以使用的物理内存范围。</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* arch/x86/kernel/e820.c */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">early_param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mem&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, parse_memopt);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">early_param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;memmap&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, parse_memmap_opt);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><details><summary>Documentation/admin-guide/kernel-parameters.txt</summary><p>这里的 nn 是指 Size，ss 则是指 Address ？</p><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>  mem=nn[KMG]  [KNL,BOOT,EARLY] Force usage of a specific amount</span></span>
<span class="line"><span>      of memory Amount of memory to be used in cases</span></span>
<span class="line"><span>      as follows:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      1 for test;</span></span>
<span class="line"><span>      2 when the kernel is not able to see the whole system memory;</span></span>
<span class="line"><span>      3 memory that lies after &#39;mem=&#39; boundary is excluded from</span></span>
<span class="line"><span>       the hypervisor, then assigned to KVM guests.</span></span>
<span class="line"><span>      4 to limit the memory available for kdump kernel.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      [ARC,MICROBLAZE] - the limit applies only to low memory,</span></span>
<span class="line"><span>      high memory is not affected.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      [ARM64] - only limits memory covered by the linear</span></span>
<span class="line"><span>      mapping. The NOMAP regions are not affected.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      [X86] Work as limiting max address. Use together</span></span>
<span class="line"><span>      with memmap= to avoid physical address space collisions.</span></span>
<span class="line"><span>      Without memmap= PCI devices could be placed at addresses</span></span>
<span class="line"><span>      belonging to unused RAM.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      Note that this only takes effects during boot time since</span></span>
<span class="line"><span>      in above case 3, memory may need be hot added after boot</span></span>
<span class="line"><span>      if system memory of hypervisor is not sufficient.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  memmap=exactmap  [KNL,X86,EARLY] Enable setting of an exact</span></span>
<span class="line"><span>      E820 memory map, as specified by the user.</span></span>
<span class="line"><span>      Such memmap=exactmap lines can be constructed based on</span></span>
<span class="line"><span>      BIOS output or other requirements. See the memmap=nn@ss</span></span>
<span class="line"><span>      option description.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  memmap=nn[KMG]@ss[KMG]</span></span>
<span class="line"><span>      [KNL, X86,MIPS,XTENSA,EARLY] Force usage of a specific region of memory.</span></span>
<span class="line"><span>      Region of memory to be used is from ss to ss+nn.</span></span>
<span class="line"><span>      If @ss[KMG] is omitted, it is equivalent to mem=nn[KMG],</span></span>
<span class="line"><span>      which limits max address to nn[KMG].</span></span>
<span class="line"><span>      Multiple different regions can be specified,</span></span>
<span class="line"><span>      comma delimited.</span></span>
<span class="line"><span>      Example:</span></span>
<span class="line"><span>        memmap=100M@2G,100M#3G,1G!1024G</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  memmap=nn[KMG]#ss[KMG]</span></span>
<span class="line"><span>      [KNL,ACPI,EARLY] Mark specific memory as ACPI data.</span></span>
<span class="line"><span>      Region of memory to be marked is from ss to ss+nn.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  memmap=nn[KMG]$ss[KMG]</span></span>
<span class="line"><span>      [KNL,ACPI,EARLY] Mark specific memory as reserved.</span></span>
<span class="line"><span>      Region of memory to be reserved is from ss to ss+nn.</span></span>
<span class="line"><span>      Example: Exclude memory from 0x18690000-0x1869ffff</span></span>
<span class="line"><span>               memmap=64K$0x18690000</span></span>
<span class="line"><span>               or</span></span>
<span class="line"><span>               memmap=0x10000$0x18690000</span></span>
<span class="line"><span>      Some bootloaders may need an escape character before &#39;$&#39;,</span></span>
<span class="line"><span>      like Grub2, otherwise &#39;$&#39; and the following number</span></span>
<span class="line"><span>      will be eaten.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  memmap=nn[KMG]!ss[KMG,EARLY]</span></span>
<span class="line"><span>      [KNL,X86] Mark specific memory as protected.</span></span>
<span class="line"><span>      Region of memory to be used, from ss to ss+nn.</span></span>
<span class="line"><span>      The memory region may be marked as e820 type 12 (0xc)</span></span>
<span class="line"><span>      and is NVDIMM or ADR memory.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  memmap=&lt;size&gt;%&lt;offset&gt;-&lt;oldtype&gt;+&lt;newtype&gt;</span></span>
<span class="line"><span>      [KNL,ACPI,EARLY] Convert memory within the specified region</span></span>
<span class="line"><span>      from &lt;oldtype&gt; to &lt;newtype&gt;. If &quot;-&lt;oldtype&gt;&quot; is left</span></span>
<span class="line"><span>      out, the whole region will be marked as &lt;newtype&gt;,</span></span>
<span class="line"><span>      even if previously unavailable. If &quot;+&lt;newtype&gt;&quot; is left</span></span>
<span class="line"><span>      out, matching memory will be removed. Types are</span></span>
<span class="line"><span>      specified as e820 types, e.g., 1 = RAM, 2 = reserved,</span></span>
<span class="line"><span>      3 = ACPI, 12 = PRAM.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div></details><p><code>mem=nn[KMG]</code> 参数用于指明系统最大可用物理内存的长度，即系统可用物理内存范围是 “0-nn”, 超过这一长度的物理内存系统将不可见。</p><p><code>memmap=</code> 可以用来：</p><ul><li>强制使用某段内存 <code>memmap=nn@ss</code></li><li>预留一段 ACPI data 区域 <code>memmap=nn#ss</code></li><li>预留一段物理内存 <code>memmap=nn$ss</code></li><li>预留一段保护区域 <code>memmap=nn!ss</code> 一般给 NVDIMM 和 ADR 内存使用</li><li>修改一段内存区域的类型 <code>memmap=&lt;size&gt;%&lt;offset&gt;-&lt;oldtype&gt;+&lt;newtype&gt;</code> type 见 enum e820_type</li></ul><p>一般 “mem=” 和 “memmap=” 配合使用，以此避免物理空间冲突。如果设置了最大物理可用内存之后，如果没有使用 “memmap=” 进行 “ACPI” 区域的设置，那么 “ACPI” 区域将设置为不可用的 RAM 区域。 TODO 「“ACPI” 区域将设置为不可用的 RAM 区域」怎么理解？</p><p>启动 8G 虚拟机，但是带 <code>mem=6G memmap=1M$0x20000000,1M!0x20100000</code>参数，</p><div class="language-log line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">log</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-provided physical RAM map:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000000000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000000009fbff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] usable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000000009fc00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000000fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 差不多 2GB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000000100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000007ffdffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] usable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000007ffe0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000007fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000b0000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000bfffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000fed1c000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000fed1ffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000feffc000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000feffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000fffc0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000ffffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 4GB-10GB 也就是 6GB 大小的区域</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] BIOS-e820: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000100000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000027fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] usable</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># e820__finish_early_params 函数，如果没有 mem= 或 memmap= 参数，是没有这一段消息的：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user-defined physical RAM map:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000000000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000000009fbff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] usable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000000009fc00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000000fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000000100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000001fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] usable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 1M$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x20000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 预留的物理内存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000020000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000200fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 1M!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x20100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 预留的保护区域</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000020100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000201fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] persistent (type </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000020200000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000007ffdffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] usable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000007ffe0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000007fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000b0000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000bfffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000fed1c000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000fed1ffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000feffc000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000feffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000fffc0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x00000000ffffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 可以看到这里相比与 e820 table，变成了 4GB-6GB，也就是 2GB 大小的区域</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 说明 mem=6G 让物理地址 6G 以上的都不可见了！</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] user: [mem </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0000000100000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x000000017fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] usable</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">~ # cat /proc/iomem</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00000000-00000fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Reserved</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00001000-0009fbff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : System RAM</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0009fc00-000fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Reserved</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  000a0000-000bffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : PCI Bus </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0000:00</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  000c0000-000c7fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Video ROM</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  000f0000-000fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : System ROM</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00100000-1fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : System RAM</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  01000000-023fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Kernel code</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  02400000-0354afff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Kernel rodata</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  03600000-0396b63f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Kernel data</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  042bc000-047fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Kernel bss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20000000-200fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20100000-201fffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Persistent Memory (legacy)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20200000-7ffdffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : System RAM</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7ffe0000-7fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 2G ~ 4G</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80000000-afffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : PCI Bus </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0000:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # 这部分没在 e820 table 里出现</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">b0000000-bfffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : PCI ECAM </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [bus </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00-ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  b0000000-bfffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Reserved</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    b0000000-bfffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : pnp </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">00:04</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">c0000000-febfffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : PCI Bus </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0000:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # 这部分没在 e820 table 里出现</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fec00000-fec003ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : IOAPIC </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fed00000-fed003ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : HPET </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  fed00000-fed003ff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : PNP01</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">03:00</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fed1c000-fed1ffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Reserved</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  fed1f410-fed1f414</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">iTCO_wdt.0.auto</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">feffc000-feffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Reserved</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fffc0000-ffffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : Reserved</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 4G ~ 6G</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100000000-17fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : System RAM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 6G ~ 10G 没有出现</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 10G ~ ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">280000000-a7fffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : PCI Bus </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0000:00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # 这部分没在 e820 table 里出现</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div>`,41)]))}const m=a(e,[["render",l]]);export{c as __pageData,m as default};
