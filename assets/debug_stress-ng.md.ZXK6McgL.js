import{_ as e,c as a,o as i,aj as t}from"./chunks/framework.CcbH9oJh.js";const k=JSON.parse('{"title":"stress-ng 用法","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"stress-ng 用法 | Blog"}]]},"headers":[],"relativePath":"debug/stress-ng.md","filePath":"debug/stress-ng.md","lastUpdated":1761828946000}'),r={name:"debug/stress-ng.md"};function l(n,s,d,h,o,p){return i(),a("div",null,s[0]||(s[0]=[t('<h1 id="stress-ng-用法" tabindex="-1">stress-ng 用法 <a class="header-anchor" href="#stress-ng-用法" aria-label="Permalink to “stress-ng 用法”">​</a></h1><p>这里记录一下我经常用的命令</p><h2 id="内存" tabindex="-1">内存 <a class="header-anchor" href="#内存" aria-label="Permalink to “内存”">​</a></h2><ul><li><code>-m N</code> <code>--vm N</code> 启动多少 workers</li><li><code>--vm-bytes N</code> 每个 worker 占用内存大小，默认 256MB</li><li><code>--vm-keep</code> 不会不断释放并重新分配，而是一直占用内存并持续写入</li><li><code>--vm-hang N</code> 每个 worker 分配内存后，睡眠 N 秒，N 为 0 时会一直睡眠。</li><li><code>--abort</code> 如果失败会退出。但是，注意 stress-ng 对 out of memory 有特殊处理，会一直重试？</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stress-ng</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --vm-bytes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1G</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --vm-hang</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="推荐" tabindex="-1">推荐 <a class="header-anchor" href="#推荐" aria-label="Permalink to “推荐”">​</a></h2><ul><li><a href="https://blog.csdn.net/A642960662/article/details/123030151" target="_blank" rel="noreferrer">Linux 性能优化（一）——stress 压力测试工具_linux stress-CSDN 博客</a></li></ul>',7)]))}const g=e(r,[["render",l]]);export{k as __pageData,g as default};
