import{_ as s,c as e,o as i,aj as t}from"./chunks/framework.CcbH9oJh.js";const k=JSON.parse('{"title":"crash","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"crash | Blog"}]]},"headers":[],"relativePath":"debug/vmcore/crash.md","filePath":"debug/vmcore/crash.md","lastUpdated":1761828946000}'),r={name:"debug/vmcore/crash.md"};function l(h,a,n,p,c,d){return i(),e("div",null,a[0]||(a[0]=[t(`<h1 id="crash" tabindex="-1">crash <a class="header-anchor" href="#crash" aria-label="Permalink to “crash”">​</a></h1><ul><li>🌟<a href="https://blog.csdn.net/21cnbao/article/details/103607644" target="_blank" rel="noreferrer">朴英敏:用 crash 工具分析 Linux 内核死锁的一次实战</a></li><li><a href="https://blog.csdn.net/linux_research/article/details/135833395" target="_blank" rel="noreferrer">crash 常用命令讲解</a></li><li><a href="https://www.cnblogs.com/dongxb/p/17364995.html" target="_blank" rel="noreferrer">【调试】crash 使用方法</a></li><li><a href="https://crash-utility.github.io/help.html" target="_blank" rel="noreferrer">crash-utility.github.io/help.html</a></li><li><a href="https://crash-utility.github.io/crash_whitepaper.html" target="_blank" rel="noreferrer">crash-utility.github.io/crash_whitepaper.html</a></li></ul><h2 id="查看线程组内的所有线程" tabindex="-1">查看线程组内的所有线程 <a class="header-anchor" href="#查看线程组内的所有线程" aria-label="Permalink to “查看线程组内的所有线程”">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PID</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> task_struct.thread_node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> task_struct.comm,pid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffff88012b98e040</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,4)]))}const b=s(r,[["render",l]]);export{k as __pageData,b as default};
