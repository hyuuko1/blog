import{_ as e,c as i,o as a,aj as t}from"./chunks/framework.CcbH9oJh.js";const _=JSON.parse('{"title":"Memory Mirror","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"Memory Mirror | Blog"}]]},"headers":[],"relativePath":"mm/memory_mirror.md","filePath":"mm/memory_mirror.md","lastUpdated":1761828946000}'),o={name:"mm/memory_mirror.md"};function s(n,r,l,m,d,p){return a(),i("div",null,r[0]||(r[0]=[t('<h1 id="memory-mirror" tabindex="-1">Memory Mirror <a class="header-anchor" href="#memory-mirror" aria-label="Permalink to “Memory Mirror”">​</a></h1><ul><li><a href="https://lore.kernel.org/lkml/1452241523-19559-1-git-send-email-izumi.taku@jp.fujitsu.com/" target="_blank" rel="noreferrer">[PATCH v4 0/2] mm: Introduce kernelcore=mirror option - Taku Izumi</a></li><li><a href="https://events.static.linuxfound.org/sites/events/files/slides/Address%20Range%20Memory%20Mirroring-RC.pdf" target="_blank" rel="noreferrer">Address Range Memory Mirroring</a></li></ul><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>kernelcore=mirror</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>内存镜像是内存冗余技术的一种，是为了提高服务器的可靠性，防止内存故障导致服务器的数据永久丢失或者系统宕机。内存镜像的工作原理与硬盘的热备份类似，内存镜像是将内存数据做两个拷贝，分别放在主内存和镜像内存中。系统工作时会向两个内存中同时写入数据，因此使得内存数据有两套完整的备份。</p>',4)]))}const h=e(o,[["render",s]]);export{_ as __pageData,h as default};
