import{_ as a,c as n,o as i,aj as e}from"./chunks/framework.CcbH9oJh.js";const o=JSON.parse('{"title":"drgn","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"drgn | Blog"}]]},"headers":[],"relativePath":"debug/vmcore/drgn.md","filePath":"debug/vmcore/drgn.md","lastUpdated":1761828946000}'),l={name:"debug/vmcore/drgn.md"};function t(r,s,p,h,k,c){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="drgn" tabindex="-1">drgn <a class="header-anchor" href="#drgn" aria-label="Permalink to “drgn”">​</a></h1><ul><li><a href="https://zhuanlan.zhihu.com/p/514335495" target="_blank" rel="noreferrer">drgn - Linux 调试的另一只翅膀 [上] - 知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/514375723" target="_blank" rel="noreferrer">drgn - Linux 调试的另一只翅膀 [下] - 知乎</a></li><li><a href="https://drgn.readthedocs.io/en/latest/index.html" target="_blank" rel="noreferrer">drgn documentation</a></li><li><a href="https://lwn.net/Articles/952942/" target="_blank" rel="noreferrer">Using drgn on production kernels [LWN.net]</a></li></ul><p>案例</p><ul><li><a href="https://drgn.readthedocs.io/en/latest/tutorials/blk_rq_qos_crash.html" target="_blank" rel="noreferrer">Stack Traces and Mystery Addresses (blk-rq-qos Crash) — drgn 0.0.31+1.g3977bdc documentation</a></li><li><a href="https://blog.x.com/engineering/en_us/topics/open-source/2021/dropping-cache-didnt-drop-cache" target="_blank" rel="noreferrer">Dropping cache didn’t drop cache</a></li></ul><p>crash 命令要 6s，而 drgn 只需要 1s，功能还更强大。</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to “”">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">❯</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> drgn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/VMs/fedora_rootfs/var/crash/127.0.0.1-2025-04-23-17:53:48/vmcore</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/os-code/linux/out/x86_64/vmlinux</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> find_task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stack_trace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trace</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#0  context_switch (out/x86_64/kernel/sched/core.c:5382:2)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#1  __schedule (out/x86_64/kernel/sched/core.c:6767:8)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#2  __schedule_loop (out/x86_64/kernel/sched/core.c:6845:3)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#3  schedule (out/x86_64/kernel/sched/core.c:6860:2)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#4  schedule_hrtimeout_range_clock (out/x86_64/kernel/time/sleep_timeout.c:207:3)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#5  ep_poll (out/x86_64/fs/eventpoll.c:2107:17)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#6  do_epoll_wait (out/x86_64/fs/eventpoll.c:2523:9)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#7  __do_sys_epoll_wait (out/x86_64/fs/eventpoll.c:2531:9)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#8  __se_sys_epoll_wait (out/x86_64/fs/eventpoll.c:2526:1)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#9  __x64_sys_epoll_wait (out/x86_64/fs/eventpoll.c:2526:1)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#10 do_syscall_x64 (out/x86_64/arch/x86/entry/syscall_64.c:63:14)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#11 do_syscall_64 (out/x86_64/arch/x86/entry/syscall_64.c:94:7)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#12 entry_SYSCALL_64+0xaf/0x14c (out/x86_64/arch/x86/entry/entry_64.S:121)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#13 0x7fd0c467d486</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trace[5]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#5 at 0xffffffff817b2137 (do_epoll_wait+0x3f7/0x47d) in ep_poll at out/x86_64/fs/eventpoll.c:2107:17 (inlined)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,7)]))}const g=a(l,[["render",t]]);export{o as __pageData,g as default};
