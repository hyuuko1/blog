import{_ as a,c as n,o as i,aj as e}from"./chunks/framework.CcbH9oJh.js";const o=JSON.parse('{"title":"kdump & crash","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"kdump & crash | Blog"}]]},"headers":[],"relativePath":"debug/vmcore/kdump.md","filePath":"debug/vmcore/kdump.md","lastUpdated":1761828946000}'),l={name:"debug/vmcore/kdump.md"};function r(p,s,t,h,k,d){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="kdump-crash" tabindex="-1">kdump &amp; crash <a class="header-anchor" href="#kdump-crash" aria-label="Permalink to “kdump &amp; crash”">​</a></h1><ul><li><a href="https://wiki.archlinux.org/title/Kdump" target="_blank" rel="noreferrer">Kdump - ArchWiki</a></li><li><a href="https://zhuanlan.zhihu.com/p/104292358" target="_blank" rel="noreferrer">3.3.2 内核态调测工具：kdump&amp;crash——kdump - 知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/104384020" target="_blank" rel="noreferrer">3.3.3 内核态调测工具：kdump&amp;crash——crash 解析 - 知乎</a></li><li><a href="https://mp.weixin.qq.com/s/o89Z75IQgah75eW0_qHBtw" target="_blank" rel="noreferrer">Linux Kdump 机制详解</a></li><li><a href="https://www.openeuler.org/zh/blog/caselibrary/crash.html" target="_blank" rel="noreferrer">【案例】kump 常见问题 | openEuler 社区</a></li><li><a href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/analyzing-a-core-dump_managing-monitoring-and-updating-the-kernel" target="_blank" rel="noreferrer">Chapter 19. Analyzing a core dump | Red Hat Product Documentation</a></li><li><a href="https://docs.kernel.org/admin-guide/pstore-blk.html" target="_blank" rel="noreferrer">pstore block oops/panic logger — The Linux Kernel documentation</a></li><li><a href="https://www.youtube.com/watch?v=6l0ulgv1OJ4" target="_blank" rel="noreferrer">Linux Kernel Debugging, Kdump, Crash Tool Basics Part-1| Easy Explanation | Youtube - YouTube</a></li><li><a href="https://docs.kernel.org/bpf/drgn.html" target="_blank" rel="noreferrer">BPF drgn tools — The Linux Kernel documentation</a><ul><li><a href="https://github.com/osandov/drgn" target="_blank" rel="noreferrer">osandov/drgn: Programmable debugger</a></li></ul></li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --enablerepo=fedora-debuginfo,updates-debuginfo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel-debuginfo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/lib/debug/lib/modules/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/vmlinux</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /proc/sysrq-trigger</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="kdump" tabindex="-1">kdump <a class="header-anchor" href="#kdump" aria-label="Permalink to “kdump”">​</a></h2><p>按照这个步骤来：</p><ol><li><a href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/installing-kdump_managing-monitoring-and-updating-the-kernel" target="_blank" rel="noreferrer">Chapter 13. Installing kdump | Red Hat Product Documentation</a></li><li><a href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel" target="_blank" rel="noreferrer">Chapter 14. Configuring kdump on the command line | Red Hat Product Documentation</a></li><li><a href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/enabling-kdumpmanaging-monitoring-and-updating-the-kernel" target="_blank" rel="noreferrer">Chapter 16. Enabling kdump | Red Hat Product Documentation</a></li><li><a href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/supported-kdump-configurations-and-targets_managing-monitoring-and-updating-the-kernel" target="_blank" rel="noreferrer">Chapter 17. Supported kdump configurations and targets | Red Hat Product Documentation</a></li><li><a href="https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/analyzing-a-core-dump_managing-monitoring-and-updating-the-kernel" target="_blank" rel="noreferrer">Chapter 19. Analyzing a core dump | Red Hat Product Documentation</a></li></ol><p>学习原理：</p><ol><li><a href="https://zhuanlan.zhihu.com/p/104292358" target="_blank" rel="noreferrer">3.3.2 内核态调测工具：kdump&amp;crash——kdump - 知乎</a></li><li><a href="https://zhuanlan.zhihu.com/p/104384020" target="_blank" rel="noreferrer">3.3.3 内核态调测工具：kdump&amp;crash——crash 解析 - 知乎</a></li><li><a href="https://mp.weixin.qq.com/s/o89Z75IQgah75eW0_qHBtw" target="_blank" rel="noreferrer">Linux Kdump 机制详解</a></li><li><a href="https://wiki.archlinux.org/title/Kdump" target="_blank" rel="noreferrer">Kdump - ArchWiki</a></li></ol><h2 id="上手" tabindex="-1">上手 <a class="header-anchor" href="#上手" aria-label="Permalink to “上手”">​</a></h2><p>先确保</p><div class="language-conf line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">conf</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>CONFIG_CRASH_DUMP=y</span></span>
<span class="line"><span>CONFIG_PROC_VMCORE=y</span></span>
<span class="line"><span>CONFIG_DEBUG_INFO=y</span></span>
<span class="line"><span>COFNIG_DEBUG_INFO_BTF=y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 依赖 kdump-utils 包含了 /usr/lib/systemd/system/kdump.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 依赖 makedumpfile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kexec-tools</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在 usr/share/doc/kdump-utils 里有些指导文档</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 默认内核参数 crashkernel=2G-64G:256M,64G-:512M</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/managing_monitoring_and_updating_the_kernel/configuring-kdump-on-the-command-line_managing-monitoring-and-updating-the-kernel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kdumpctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-default-crashkernel</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他的一些内核参数：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># oops=panic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># panic_on_warn=1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># softlockup_panic=1 还可通过 sysctl 控制</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># unknown_nmi_panic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># workqueue.panic_on_stall=</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置好内核参数后重启，会发现预留了 256M 内存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Crash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /proc/iomem</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  6f000000-7effffff</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Crash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改配置文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># KDUMP_KERNELVER=&quot;6.15.0-0.rc3.20250421git9d7a0577c9db.28.fc43.x86_64&quot; 填从 fedora 软件仓安装的内核的版本</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># KDUMP_COMMANDLINE=&quot;rw root=myfs&quot; 第二内核的 initrd 会读这个 root=myfs 参数，将 myfs 挂载为 /sysroot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/sysconfig/kdump</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 取消 virtiofs myfs 的注释</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 把 makedumpfile 的 -l 选项 改成 -c（用 zlib 而非 lzo，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 我发现 archlinux 上的 crash 不支持 lzo，等到 8.0.6-2 应该就支持了</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/kdump.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kdump.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每次修改配置后都需要 restart kdump 重新生成一些文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kdump</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">新文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> initramfs-6.15.0-0.rc3.20250421git9d7a0577c9db.28.fc43.x86_64kdump.img</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 触发 crash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kdumpctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /proc/sysrq-trigger</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在 archlinux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">crash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/os-code/linux/out/x86_64/vmlinux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/VMs/fedora_rootfs/var/crash/127.0.0.1-2025-04-23-17:43:26/vmcore</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> dracut 何作用？</li></ul><p>还要增加的参数，更新内核时，kdump 的 hook 提示我加的 kernel=/boot/vmlinuz-6.15.0-0.rc3.20250421git9d7a0577c9db.28.fc43.x86_64</p><p>kdump: Failed to detect kdump kernel location</p><p>[ 0.007782] Kernel command line: elfcorehdr=0x6f000000 nokaslr selinux=0 audit=0 console=ttyS0 kernel=/boot/vmlinuz-6.15.0-0.rc3.20250421git9d7a0577c9db.28.fc43.x86_64 iommu=pt intel_iommu=on rootfstype=virtiofs rw irqpoll nr_cpus=1 reset_devices cgroup_disable=memory mce=off numa=off udev.children-max=2 panic=10 acpi_no_memhotplug transparent_hugepage=never nokaslr hest_disable novmcoredd cma=0 hugetlb_cma=0 pcie_ports=compat disable_cpu_apicid=0</p><p>[ 0.000000] Linux version 6.15.0-rc2-00087-gcfb2e2c57aef-dirty (hyuuko@archlinux) (clang version 19.1.7, LLD 19.1.7) #27 SMP PREEMPT_DYNAMIC Thu Apr 17 23:57:31 CST 2025 [ 0.000000] Command line: nokaslr selinux=0 audit=0 console=ttyS0 crashkernel=2G-64G:256M,64G-:512M iommu=pt intel_iommu=on rootfstype=virtiofs root=myfs rw</p><p>好像 KDUMP_COMMANDLINE_APPEND 没生效？？</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 估算推荐的 crashkernel 值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kdumpctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> estimate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,19)]))}const u=a(l,[["render",r]]);export{o as __pageData,u as default};
