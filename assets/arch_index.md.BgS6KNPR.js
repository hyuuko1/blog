import{_ as r,c as t,o as a,aj as l}from"./chunks/framework.CcbH9oJh.js";const u=JSON.parse('{"title":"体系结构","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"体系结构 | Blog"}]]},"headers":[],"relativePath":"arch/index.md","filePath":"arch/index.md","lastUpdated":1761828946000}'),i={name:"arch/index.md"};function n(o,e,c,m,h,p){return a(),t("div",null,e[0]||(e[0]=[l('<h1 id="体系结构" tabindex="-1">体系结构 <a class="header-anchor" href="#体系结构" aria-label="Permalink to “体系结构”">​</a></h1><ul><li>架构：指令集体系结构（Instruction Set Architecture，简称 ISA），是处理器的一个抽象描述，称为架构。例子：x86, amd64, Armv8-A, Armv9-A。</li><li>微架构：ISA 在处理器中的实现，被称为 Microarchitecture（微架构）。</li></ul><p>目前只记录了一些 ISA 相关的笔记</p><h2 id="x86-文档" tabindex="-1">x86 文档 <a class="header-anchor" href="#x86-文档" aria-label="Permalink to “x86 文档”">​</a></h2><ul><li><a href="https://www.intel.com/content/www/us/en/developer/articles/technical/intel-sdm.html" target="_blank" rel="noreferrer">Intel® 64 and IA-32 Architectures Software Developer Manuals</a> 卷三是系统编程指南，1500 多页。</li><li><a href="https://www.amd.com/content/dam/amd/en/documents/processor-tech-docs/programmer-references/40332.pdf" target="_blank" rel="noreferrer">AMD64 Architecture Programmer&#39;s Manual Volumes 1–5</a> 感觉比 intel 的更易懂？卷二是系统编程指南，不到 900 页。</li><li><a href="https://nju-projectn.github.io/i386-manual/" target="_blank" rel="noreferrer">80386 Programmer&#39;s Reference Manual</a> 勘误后的 i386-manual</li></ul><h2 id="arm-文档" tabindex="-1">arm 文档 <a class="header-anchor" href="#arm-文档" aria-label="Permalink to “arm 文档”">​</a></h2><p><a href="https://developer.arm.com/documentation" target="_blank" rel="noreferrer">https://developer.arm.com/documentation</a></p><p>必看：<a href="https://developer.arm.com/documentation/102404/0201/?lang=en" target="_blank" rel="noreferrer">Learn the architecture - Introducing the Arm architecture</a></p><ul><li>三种架构 profile：A, R 和 M <ul><li>A-Profile (Applications) 高性能，运行复杂系统，比如 Linux 和 Windows</li><li>R-Profile (Real-Time) 用于有实时性需求的系统</li><li>M-Profile (Microcontroller) 用于小的，低功耗的 IoT 设备</li></ul></li><li>架构规范分为这几部分： <ul><li>指令集</li><li>寄存器</li><li>异常模型</li><li>内存模型</li><li>Debug, trace, and profiling</li></ul></li><li>理解 Arm 文档，有个表列出了不同类型的文档里有哪些内容 <a href="https://developer.arm.com/documentation/102404/0201/Understanding-Arm-documentation" target="_blank" rel="noreferrer">https://developer.arm.com/documentation/102404/0201/Understanding-Arm-documentation</a><ul><li>架构文档：每个 Arm 架构参考手册 Architecture Reference Manual 都描述了一个架构的规范。一个 Arm 架构参考手册与该架构的任何实现都相关。</li><li>微架构文档 <ul><li>每个 Arm Cortex 处理器都有一个技术参考手册 Technical Reference Manual (TRM)，描述了特定于该处理器的特性。TRM 不会重复在 Arm 架构参考手册里出现过的信息。</li><li>每个 Arm Cortex 处理器还有一个配置和集成手册 Configuration and Integration Manual (CIM)，描述了如何将该处理器集成到一个系统里，只对 SoC 设计者有意义。</li></ul></li></ul></li><li>一些术语：PE、RES0 RES1</li></ul><p><a href="https://www.arm.com/architecture/learn-the-architecture" target="_blank" rel="noreferrer">https://www.arm.com/architecture/learn-the-architecture</a><a href="https://www.arm.com/architecture/learn-the-architecture/a-profile" target="_blank" rel="noreferrer">https://www.arm.com/architecture/learn-the-architecture/a-profile</a><a href="https://developer.arm.com/Architectures" target="_blank" rel="noreferrer">https://developer.arm.com/Architectures</a> 分成了几个专题，比如：</p><ul><li>A-Profile Architecture: <a href="https://developer.arm.com/Architectures/A-Profile%20Architecture" target="_blank" rel="noreferrer">https://developer.arm.com/Architectures/A-Profile Architecture</a></li><li>GIC: <a href="https://developer.arm.com/Architectures/Generic%20Interrupt%20Controller" target="_blank" rel="noreferrer">https://developer.arm.com/Architectures/Generic Interrupt Controller</a></li><li>SMMU: <a href="https://developer.arm.com/Architectures/System%20MMU%20Support" target="_blank" rel="noreferrer">https://developer.arm.com/Architectures/System MMU Support</a></li><li>ABI: <a href="https://developer.arm.com/Architectures/Application%20Binary%20Interface" target="_blank" rel="noreferrer">https://developer.arm.com/Architectures/Application Binary Interface</a></li></ul><p>Arm 架构文档</p><ul><li>入门：之前有个 <a href="https://developer.arm.com/documentation/den0024/a" target="_blank" rel="noreferrer">ARM® Cortex®-A Series Programmer&#39;s Guide for ARMv8-A</a> 现在下载不到了，可以从 <a href="https://cs140e.sergio.bz/docs/ARMv8-A-Programmer-Guide.pdf" target="_blank" rel="noreferrer">https://cs140e.sergio.bz/docs/ARMv8-A-Programmer-Guide.pdf</a> 下载到，有人翻译了 <a href="https://www.zhihu.com/column/c_1455195069590962177" target="_blank" rel="noreferrer">https://www.zhihu.com/column/c_1455195069590962177</a></li><li>参考手册：<a href="https://developer.arm.com/documentation/ddi0487/latest" target="_blank" rel="noreferrer">Arm Architecture Reference Manual for A-profile architecture</a> 有 1 万多页。</li></ul><p>GIC v3 v4 文档：</p><ul><li>入门，偏概念介绍的文档：<a href="https://developer.arm.com/Architectures/Generic%20Interrupt%20Controller" target="_blank" rel="noreferrer">https://developer.arm.com/Architectures/Generic Interrupt Controller</a> 列出的 <ul><li><a href="https://developer.arm.com/documentation/dai0492/b/?lang=en" target="_blank" rel="noreferrer">https://developer.arm.com/documentation/dai0492/b/?lang=en</a></li><li><a href="https://developer.arm.com/documentation/198123/0302/?lang=en" target="_blank" rel="noreferrer">https://developer.arm.com/documentation/198123/0302/?lang=en</a></li><li><a href="https://developer.arm.com/documentation/102923/0100/?lang=en" target="_blank" rel="noreferrer">https://developer.arm.com/documentation/102923/0100/?lang=en</a></li><li><a href="https://developer.arm.com/documentation/107627/0102/?lang=en" target="_blank" rel="noreferrer">https://developer.arm.com/documentation/107627/0102/?lang=en</a></li></ul></li><li>详尽的规范：<a href="https://developer.arm.com/documentation/ihi0069/hb/?lang=en" target="_blank" rel="noreferrer">Arm Generic Interrupt Controller (GIC) Architecture Specification</a></li></ul><p>SMMU 文档：</p><ul><li>入门：<a href="https://developer.arm.com/documentation/109242/0100/?lang=en" target="_blank" rel="noreferrer">Learn the Architecture - SMMU Software Guide</a></li><li>规范：<a href="https://developer.arm.com/documentation/ihi0062/dc/?lang=en" target="_blank" rel="noreferrer">ARM System Memory Management Unit Architecture Specification - SMMU architecture version 2.0</a></li></ul><h2 id="risc-v-文档" tabindex="-1">RISC-V 文档 <a class="header-anchor" href="#risc-v-文档" aria-label="Permalink to “RISC-V 文档”">​</a></h2><ul><li><a href="https://lf-riscv.atlassian.net/wiki/spaces/HOME/pages/16154769/RISC-V+Technical+Specifications" target="_blank" rel="noreferrer">RISC-V Technical Specifications</a> 两个规范，特权指令集和非特权指令集，分别只有 172 页和 670 页。</li><li><a href="https://zh.z-lib.fm/book/27272743/ff0141" target="_blank" rel="noreferrer">RISC-V 开放架构设计之道</a></li></ul>',19)]))}const d=r(i,[["render",n]]);export{u as __pageData,d as default};
